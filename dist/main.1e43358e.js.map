{"version":3,"sources":["src/vdom/createElement.js","src/vdom/render.js","src/vdom/mount.js","src/vdom/diff.js","src/main.js"],"names":["createElement","tagName","attrs","children","renderElem","$el","document","Object","entries","k","v","setAttribute","child","$child","render","appendChild","vNode","createTextNode","$node","$target","replaceWith","zip","xs","ys","zipped","i","Math","max","length","push","diffAttrs","oldAttrs","newAttrs","patches","removeAttribute","patch","diffChildren","oldVChildren","newVChildren","childPatches","forEach","oldVChild","diff","additionalPatches","slice","additionalVChild","$parent","childNodes","vOldNode","vNewNode","undefined","remove","$newNode","patchAttrs","patchChildren","createVApp","count","id","dataCount","String","Array","from","src","vApp","$app","$rootEl","getElementById","setInterval","vNewApp","floor","random"],"mappings":";;AIAA;;AACA;;AACA;AJFA,AGAA,ADAA;AEGA,AJFA,AEAA;AFCA,AEAA;AFCA,eEAe,kBAACkB,KAAD,EAAQC,OAAR,EAAoB;AFCnC,AEAGA,EAAAA,OAAO,CAACC,WAAR,CAAoBF,KAApB;AFCH,AEAG,SAAOA,KAAP;AFCH,AEAC;AFCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;ADeA,ACdA,SDcSlB,aAAT,CAAuBC,OAAvB,EAAoE;AAAA,ACbpE,iFDagE,EAAI;AIVpE,AJUoE,ACZpE,wBDYkCC,KAAkC;AITpE,AJSoE,AGbpE,AFEA,IGEMqD,ADJAlC,AFEAjB,EDW4BF,CGbzB,GAAG,CHawD,GITpD,AHFA,GGEG,AHFA,EEFbmB,GAAM,CAACC,EAAD,CCINiC,AHFAnD,CEFWmB,EAAL,EAAY,KCIL,AHFA,CGECiC,CJSsB,EAA0B,EITjD,CHFkC;AGElC,AJSiD,AGZjE,AFCkD,MED5ChC,AFCavB,GGGnB,GDJY,CFCsC,EEDnC,EAAf,IFCmBA,MDWwBE,CCXO,ODWe,EIRnD,KAAd,EAAqB;AAClBD,AJO8D,ACXf,IGI/CA,EJOwCC,ACXfD,GGIpB,EAAE,AHJwC,GDWe,KCXrCA,KAAsB,oBDWI,EAAW;AIN3DuD,ADLN,AFAkD,MGK5CA,AHL6BtD,CEA9B,CCKG,EAAE,CDLDsB,CAAC,EFAwC,CGIxC,ADJG,CAAb,EAAgBA,CAAC,GAAGC,AFAevB,IEAX,CAACwB,GAAL,AFA8B,CEArBL,EAAE,CAACM,MAAZ,EAAoBL,EAAE,CAACK,MAAvB,CAApB,EAAoDH,CAAC,EAArD,EAAyD;ACMnDiC,AJMN,AGXGlC,AFAH,IEAGA,ECKGkC,AHLArD,GDWC,ACXE,CEAA,CAACwB,CFAEvB,GGKG,ADLZ,CAAY,CCKEkD,ADLDlC,EAAE,CAACG,AFAC,CEAF,AFAGzB,CEAN,EAAQuB,EAAE,CAACE,CAAD,CAAV,CAAZ,IFAS,CAAuBxB,OAAvB,CAAZ,CADkD,CAGlD;AGCU,AJSPA,AGXF,IHWEA,CIVkB,MJUX,EAAPA,OADI;AIJJ,AJMAC,ACVH,IDUGA,KAAK,EAALA,KAFI,qBCRcK,MAAM,CAACC,OAAP,CAAeN,KAAf,CAArB,qCAA4C;AGKzCC,AJMAA,AGZH,AFC4C,IGKzCA,AJMAA,KGZIqB,GCMI,AJMA,EAARrB,CILG,ADPN,4BCOoB,OAAd,CADK,EAELwD,MAAM,CAACH,KAAD,CAFD,4BAGFI,KAAK,CAACC,IAAN,CAAW;AAAEjC,AJAf,AGRT,AFA8C,CEN/C,EHcG,GIAsBA,EHRVnB,CAAgC,GGQhB,EAAE+C;AAAV,AJKtB,ACb8C,KGQnC,EAA8B,CHRxB9C,CAA6B;AGQL,ADN1C,IAAMoB,SCOM,ADPG,GAAG,SAAZA,SAAY,CAACC,MCOO,EDPR,EAAWC,CCOjB,EAAqB,KDPf,EAAwB;ACQ3B9B,ADPZ,AFFGG,IAAAA,EEEG4B,CFFA,CGSM/B,AHTLS,KGSU,ADPJ,ECOM,AJKPX,CGZI,EAAhB,CADuC,CAGvC,AFJG,CAAiBS,CAAjB,EAAoBC,CAApB;AGUYoD,AHTd,GANiD,CAQlD,MGOeA,GAAG,EAAE;AADD,ADRoB;ACOT,ADPS,OCO9B,CAD8B;AAAA,ADNA,AFNW,KGYzC,CAHE,EDCCrD,CAJ2B,oCFGnBN,QAT8B;AGG7B,ADGkB,AFNW,GGGlD,CADgB,IDQDO,CAJwB;ACJvB,CAAnB;ADSMuB,AFX+C,IEW/CA,OAAO,CAACJ,IAAR,CAAa,UAACX,KAAD,EAAW;ACW9B,ADVSA,AFHN,IGaCsC,EDVKtC,GCUA,EDVK,CCUF,ADVGP,CCUf,WDVS,CAAmBF,CAAnB,EAAsBC,CAAtB,2BFHwB;AGcjC,ADVS,AFJwB,IGc7BqD,IAAI,EHdMnD,CGcH2C,EDVKrC,EFJiB,GEIxB,GCUY,CAACsC,KAAD,CAArB;AACA,ADVO,AFJD,IGcAQ,CDbA,GCaI,EHdEnD,CGcC,KHdK,GAAGC,MAAM,CAACF,KAAD,CGcPmD,AHdd,IGcO,CAAb;AAEA,ADpB0C,AFKpC1D,IGeF4D,EHfE5D,GAAG,CAACU,CGeC,GAAG,OHfR,CAAgBF,MAAhB,MGecmD,IAAN,EAAY1D,QAAQ,CAAC4D,cAAT,CAAwB,KAAxB,CAAZ,CAAd;AAEAC,AHhBI,WGgBO,CAAC,YAAM;AACf,ADnBA,AFVkD,MG6B5CC,OA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","file":"main.1e43358e.js","sourceRoot":"..","sourcesContent":["/**\r\n * createElement 模擬 React.createElement\r\n * 將\r\n * <div title=\"some title\">text</div>\r\n * 轉譯成\r\n * {\r\n *    \"div\",\r\n *    attrs: {\r\n *        title:\"some title\"\r\n *    },\r\n *     children:[\r\n *       \"text\"\r\n *   ]\r\n * }\r\n */\r\nfunction createElement(tagName, { attrs = {}, children = [] } = {}) {\r\n   return {\r\n      tagName,\r\n      attrs,\r\n      children,\r\n   };\r\n}\r\n\r\nexport default createElement;\r\n","/**\r\n *\r\n * @param {*} param0\r\n */\r\nconst renderElem = ({ tagName, attrs, children }) => {\r\n   const $el = document.createElement(tagName);\r\n\r\n   // set attributes\r\n   for (const [k, v] of Object.entries(attrs)) {\r\n      $el.setAttribute(k, v);\r\n   }\r\n\r\n   // set children\r\n   for (const child of children) {\r\n      const $child = render(child);\r\n      $el.appendChild($child);\r\n   }\r\n\r\n   return $el;\r\n};\r\n\r\n/**\r\n * render function 將描述虛擬 dom 的 object 轉化成真正的 dom 節點\r\n * @param {Object} vNode\r\n */\r\nconst render = (vNode) => {\r\n   if (typeof vNode === \"string\") {\r\n      return document.createTextNode(vNode);\r\n   }\r\n\r\n   return renderElem(vNode);\r\n};\r\n\r\nexport default render;\r\n","/**\r\n * mount function 將 $target 替換為 $node\r\n */\r\nexport default ($node, $target) => {\r\n   $target.replaceWith($node);\r\n   return $node;\r\n};\r\n","import render from \"./render\";\r\n\r\nconst zip = (xs, ys) => {\r\n   const zipped = [];\r\n   for (let i = 0; i < Math.max(xs.length, ys.length); i++) {\r\n      zipped.push([xs[i], ys[i]]);\r\n   }\r\n   return zipped;\r\n};\r\n\r\nconst diffAttrs = (oldAttrs, newAttrs) => {\r\n   const patches = [];\r\n\r\n   // set new attributes\r\n   for (const [k, v] of Object.entries(newAttrs)) {\r\n      patches.push(($node) => {\r\n         $node.setAttribute(k, v);\r\n         return $node;\r\n      });\r\n   }\r\n\r\n   // remove old attributes\r\n   for (const k in oldAttrs) {\r\n      if (!(k in newAttrs)) {\r\n         patches.push(($node) => {\r\n            $node.removeAttribute(k);\r\n            return $node;\r\n         });\r\n      }\r\n   }\r\n\r\n   return ($node) => {\r\n      for (const patch of patches) {\r\n         patch($node);\r\n      }\r\n   };\r\n};\r\n\r\nconst diffChildren = (oldVChildren, newVChildren) => {\r\n   const childPatches = [];\r\n   oldVChildren.forEach((oldVChild, i) => {\r\n      childPatches.push(diff(oldVChild, newVChildren[i]));\r\n   });\r\n\r\n   const additionalPatches = [];\r\n   for (const additionalVChild of newVChildren.slice(oldVChildren.length)) {\r\n      additionalPatches.push(($node) => {\r\n         $node.appendChild(render(additionalVChild));\r\n         return $node;\r\n      });\r\n   }\r\n\r\n   return ($parent) => {\r\n      for (const [patch, child] of zip(childPatches, $parent.childNodes)) {\r\n         patch(child);\r\n      }\r\n\r\n      for (const patch of additionalPatches) {\r\n         patch($parent);\r\n      }\r\n\r\n      return $parent;\r\n   };\r\n};\r\n\r\n/**\r\n * function diff 對比新舊的virtual dom, 找出不同點, 並針對不同點進行dom的更新\r\n * return 一個 patch function 對不同情況做處理\r\n * @param {*} vOldNode\r\n * @param {*} vNewNode\r\n */\r\nconst diff = (vOldNode, vNewNode) => {\r\n   //此情況為舊的 vNode 將被刪除\r\n   if (vNewNode === undefined) {\r\n      return ($node) => {\r\n         $node.remove();\r\n         return undefined;\r\n      };\r\n   }\r\n\r\n   //新舊節點的其中之一為字串\r\n   if (typeof vOldNode === \"string\" || typeof vNewNode === \"string\") {\r\n      if (vOldNode !== vNewNode) {\r\n         //不同就直接用新的取代舊的\r\n         return ($node) => {\r\n            const $newNode = render(vNewNode);\r\n            $node.replaceWith($newNode);\r\n            return $newNode;\r\n         };\r\n      } else {\r\n         //相同的話就不必做任何處理\r\n         return ($node) => undefined;\r\n      }\r\n   }\r\n\r\n   //tag name不同就直接當作是全新的, 直接用新的取代舊的\r\n   if (vOldNode.tagName !== vNewNode.tagName) {\r\n      return ($node) => {\r\n         const $newNode = render(vNewNode);\r\n         $node.replaceWith($newNode);\r\n         return $newNode;\r\n      };\r\n   }\r\n\r\n   //對 Attrs\r\n   const patchAttrs = diffAttrs(vOldNode.attrs, vNewNode.attrs);\r\n   const patchChildren = diffChildren(vOldNode.children, vNewNode.children);\r\n\r\n   return ($node) => {\r\n      patchAttrs($node);\r\n      patchChildren($node);\r\n      return $node;\r\n   };\r\n};\r\n\r\nexport default diff;\r\n","import createElement from \"./vdom/createElement\";\r\nimport render from \"./vdom/render\";\r\nimport mount from \"./vdom/mount\";\r\nimport diff from \"./vdom/diff\";\r\n\r\n//functional component with props\r\nconst createVApp = (count) =>\r\n   createElement(\"div\", {\r\n      attrs: {\r\n         id: \"app\",\r\n         dataCount: count,\r\n      },\r\n      // children has tow kind of type: String and Element\r\n      children: [\r\n         createElement(\"input\"),\r\n         String(count),\r\n         ...Array.from({ length: count }, () =>\r\n            createElement(\"img\", {\r\n               attrs: {\r\n                  src: \"https://media.giphy.com/media/cuPm4p4pClZVC/giphy.gif\",\r\n               },\r\n            })\r\n         ),\r\n      ],\r\n   });\r\n\r\nlet count = 0;\r\nlet vApp = createVApp(count);\r\nconst $app = render(vApp);\r\n\r\nlet $rootEl = mount($app, document.getElementById(\"app\"));\r\n\r\nsetInterval(() => {\r\n   const vNewApp = createVApp(Math.floor(Math.random() * 10));\r\n   const patch = diff(vApp, vNewApp); //\r\n   $rootEl = patch($rootEl); //為不同處做出改變\r\n   vApp = vNewApp; //給下一個 vNewApp 做比較\r\n}, 1000);\r\n"]}